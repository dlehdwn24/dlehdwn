<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<resultMap id="memResult" type="memberVO">
		<result property="id" column="id" />
        <result property="pwd" column="pwd" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="tel" column="tel" />
        <result property="age" column="age" />
        <result property="gender" column="gender" />
        <result property="joinDate" column="joinDate" />
	</resultMap> 
	<!-- 
	<resultMap id="memResult" type="java.util.HashMap">
      <result property="id" column="id" />
      <result property="pwd" column="pwd" />
      <result property="name" column="name" />
      <result property="email" column="email" />
      <result property="joinDate" column="joinDate" />
   </resultMap> -->


	<select id="selectAllMemberList" resultMap="memResult">
      <![CDATA[
         select * from y_member	order by id asc	 	
      ]]>
	</select>
    
  <insert id="insertMember"  parameterType="memberVO">
		<![CDATA[
		 insert into y_member(id,pwd, name, email, tel, age, gender, joinDate)
		 values(#{id}, #{pwd}, #{name}, #{email}, #{tel}, #{age}, #{gender}, sysdate)
		]]>      
	</insert>
	
   <update id="modMember"  parameterType="memberVO">
     <![CDATA[
	     update y_member
	     
	     
	     set id=#{member.id}, pwd=#{pwd}, name=#{name}, email=#{email}, tel=#{tel}, age=#{age}, gender=#{gender}, joinDate=#{member.joinDate}
	     where
	     id=#{id}
      ]]>      
   </update>  
   
   
   <update id="updateMember" parameterType="java.util.HashMap">
	   update y_member
			   <set>
			      <if test=" pwd!='' and pwd!=null">
			        pwd=#{pwd},
			      </if>
			    
			       
			   </set>
		where 
		id=#{member.id}
	</update>
   
     
   <delete id="deleteMember"  parameterType="String">
	<![CDATA[
	   delete from  y_member
	   where
	   id=#{id}
	]]>      
  </delete>
  <select id="loginById"  resultType="memberVO"   parameterType="memberVO" >
	<![CDATA[
		select * from y_member	
		where id=#{id} and pwd=#{pwd}		
	]]>
  </select>
  
  <select id="selectOverlappedID" parameterType="String" resultType="String">
  	<![CDATA[
  		select decode(count(*), 1, 'true', 0, 'false')
  		from y_member
  		where id = #{id}
  		]]>
  </select>

</mapper>